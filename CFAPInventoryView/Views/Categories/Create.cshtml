@model CFAPInventoryView.Data.Models.Category

@{
    ViewData["Title"] = "Category";

    List<AssignedAgeGroupViewModel>? assignedAgeGroups = null;
    if (ViewBag.AssignedAgeGroupsList is not null)
    {
        assignedAgeGroups = ViewBag.AssignedAgeGroupsList as List<AssignedAgeGroupViewModel>;
    }
}

<h1>Create</h1>

<hr />
<div class="row mb-2">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-floating mb-3">
                <input asp-for="Name" class="form-control" aria-required="true" placeholder="name" />
                <label asp-for="Name" class="control-label"></label>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-floating mb-3">
                <input asp-for="SafeStockLevel" class="form-control" aria-required="true" placeholder="safe stock level" />
                <label asp-for="SafeStockLevel" class="control-label"></label>
                <span asp-validation-for="SafeStockLevel" class="text-danger"></span>
            </div>
            @if (assignedAgeGroups is not null)
            {
                <div class="border border-1 mb-3 p-2">
                    <h6>Select all age groups this category applies to:</h6>
                    <hr />
                    @foreach (var assignedAgeGroup in assignedAgeGroups)
                    {
                        <div class="form-group form-check form-switch mb-3">
                            <input type="checkbox" name="selectedAgeGroupIds" class="form-check-input" role="switch" value="@assignedAgeGroup.AgeGroupId" @(assignedAgeGroup.Assigned ? "checked='true'" : "") />
                            <label class="form-check-label">
                                @Html.DisplayFor(modelItem => assignedAgeGroup.Description)
                            </label>
                        </div>
                    }
                </div>
            }
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-outline-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

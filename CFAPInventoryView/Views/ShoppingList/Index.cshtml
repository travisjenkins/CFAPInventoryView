@model IEnumerable<Basket>

@{
    ViewData["Title"] = "iBelong Basket Shopping Lists";
#pragma warning disable CS8602
}

<p class="text-center text-lg-start">
    <a asp-action="Create">Create New</a>
</p>

@if (Model is not null && Model.ElementAtOrDefault(0) is not null)
{
    <div class="row fw-bold d-none d-lg-flex text-start text-lg-center">
        <div class="col-lg-1">@Html.DisplayNameFor(model => model.AgeGroupId)</div>
        <div class="col-lg-1">@Html.DisplayNameFor(model => model.EthnicityId)</div>
        <div class="col-lg-1">@Html.DisplayNameFor(model => model.GenderId)</div>
        <div class="col-lg-1">@Html.DisplayNameFor(model => model.QuantityNeeded)</div>
        <div class="col-lg-1">@Html.DisplayNameFor(model => model.DateAssembled)</div>
        <div class="col-lg-2">Include</div>
        <div class="col-lg-2">Optional</div>
        <div class="col-lg-2">Exclude</div>
    </div>

    int count = 0;
    @foreach (var item in Model)
    {
        count++;
        string alternatingRowColorClass = string.Empty;
        if (count % 2 == 0)
        {
            alternatingRowColorClass = "medium-row-color";
        }
        <div class="row text-start text-lg-center @alternatingRowColorClass">
            <div class="row row-cols-2 d-lg-none">
                <div class="col text-end fw-bold">@Html.DisplayNameFor(model => model.AgeGroupId):</div>
                <div class="col text-start">@Html.DisplayFor(modelItem => item.AgeGroup.Description)</div>
            </div>
            <div class="col-lg-1 d-none d-lg-inline-block">@Html.DisplayFor(modelItem => item.AgeGroup.Description)</div>
            <div class="row row-cols-2 d-lg-none">
                <div class="col text-end fw-bold">@Html.DisplayNameFor(model => model.EthnicityId):</div>
                <div class="col text-start">@Html.DisplayFor(modelItem => item.Ethnicity.Description)</div>
            </div>
            <div class="col-lg-1 d-none d-lg-inline-block">@Html.DisplayFor(modelItem => item.Ethnicity.Description)</div>
            <div class="row row-cols-2 d-lg-none">
                <div class="col text-end fw-bold">@Html.DisplayNameFor(model => model.GenderId):</div>
                <div class="col text-start">@Html.DisplayFor(modelItem => item.Gender.Description)</div>
            </div>
            <div class="col-lg-1 d-none d-lg-inline-block">@Html.DisplayFor(modelItem => item.Gender.Description)</div>
            <div class="row row-cols-2 d-lg-none">
                <div class="col text-end fw-bold">@Html.DisplayNameFor(model => model.QuantityNeeded):</div>
                <div class="col text-start">@Html.DisplayFor(modelItem => item.QuantityNeeded)</div>
            </div>
            <div class="col-lg-1 d-none d-lg-inline-block">@Html.DisplayFor(modelItem => item.QuantityNeeded)</div>
            <div class="row row-cols-2 d-lg-none">
                <div class="col text-end fw-bold">@Html.DisplayNameFor(model => model.DateAssembled):</div>
                <div class="col text-start">@Html.DisplayFor(modelItem => item.DateAssembled)</div>
            </div>
            <div class="col-lg-1 d-none d-lg-inline-block">@Html.DisplayFor(modelItem => item.DateAssembled)</div>
            @if (item.CategoryBaskets is not null)
            {
                var orderedCategoryBasket = item.CategoryBaskets.Where(cb => cb.CategoryId != null).OrderBy(cb => cb.Category.Name).ToList();
                var orderedOptionalCategoryBasket = item.CategoryBaskets.Where(cb => cb.OptionalCategoryId != null).OrderBy(cb => cb.OptionalCategory.Name).ToList();
                var orderedExcludeCategoryBasket = item.CategoryBaskets.Where(cb => cb.ExcludeCategoryId != null).OrderBy(cb => cb.ExcludeCategory.Name).ToList();
                <div class="row row-cols-2 d-lg-none">
                    <div class="col text-end fw-bold">Include:</div>
                    <div class="col text-start">
                        <ul>
                            @foreach (var categoryBasket in orderedCategoryBasket)
                            {
                                if (categoryBasket.CategoryId is not null)
                                {
                                    <li>@Html.DisplayFor(modelItem => categoryBasket.Category.Name)</li>
                                }
                            }
                        </ul>
                    </div>
                </div>
                <div class="col-lg-2 text-start d-none d-lg-inline-block">
                    <ul>
                        @foreach (var categoryBasket in orderedCategoryBasket)
                        {
                            if (categoryBasket.CategoryId is not null)
                            {
                                <li>@Html.DisplayFor(modelItem => categoryBasket.Category.Name)</li>
                            }
                        }
                    </ul>
                </div>
                <div class="row row-cols-2 d-lg-none">
                    <div class="col text-end fw-bold">Optional:</div>
                    <div class="col text-start">
                        <ul>
                            @foreach (var categoryBasket in orderedOptionalCategoryBasket)
                            {
                                if (categoryBasket.OptionalCategoryId is not null)
                                {
                                    <li>@Html.DisplayFor(modelItem => categoryBasket.OptionalCategory.Name)</li>
                                }
                            }
                        </ul>
                    </div>
                </div>
                <div class="col-lg-2 text-start d-none d-lg-inline-block">
                    <ul>
                        @foreach (var categoryBasket in orderedOptionalCategoryBasket)
                        {
                            if (categoryBasket.OptionalCategoryId is not null)
                            {
                                <li>@Html.DisplayFor(modelItem => categoryBasket.OptionalCategory.Name)</li>
                            }
                        }
                    </ul>
                </div>
                <div class="row row-cols-2 d-lg-none">
                    <div class="col text-end fw-bold">Exclude:</div>
                    <div class="col text-start">
                        <ul>
                            @foreach (var categoryBasket in orderedExcludeCategoryBasket)
                            {
                                if (categoryBasket.ExcludeCategoryId is not null)
                                {
                                    <li>@Html.DisplayFor(modelItem => categoryBasket.ExcludeCategory.Name)</li>
                                }
                            }
                        </ul>
                    </div>
                </div>
                <div class="col-lg-2 text-start d-none d-lg-inline-block">
                    <ul>
                        @foreach (var categoryBasket in orderedExcludeCategoryBasket)
                        {
                            if (categoryBasket.ExcludeCategoryId is not null)
                            {
                                <li>@Html.DisplayFor(modelItem => categoryBasket.ExcludeCategory.Name)</li>
                            }
                        }
                    </ul>
                </div>
            }
            
        </div>
        <div class="row text-center @alternatingRowColorClass">
            <div class="col">
                <a asp-action="Edit" asp-route-id="@item.BasketId">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.BasketId">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.BasketId">Delete</a>
            </div>
        </div>
        @if (count != Model.Count())
        {
            <hr />
        }
    }
}
else
{
    <div class="text-center py-2 border border-2 border-secondary rounded text-secondary">
        <p class="pt-2 fs-4">There are no @ViewData["Title"] in your database.</p>
    </div>
}
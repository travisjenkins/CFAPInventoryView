@model List<UserManagementViewModel>

@{
    ViewData["Title"] = "User Management";
#pragma warning disable CS8602
}

<div asp-validation-summary="All" class="text-danger"></div>
@if (Model is not null && Model.ElementAtOrDefault(0) is not null)
{
    <div class="row fw-bold d-none d-lg-flex text-start text-lg-center">
        <div class="col-lg-2">@Html.DisplayNameFor(model => model.ElementAtOrDefault(0).ApplicationUser.UserName).SplitCamelAndPascalCase()</div>
        <div class="col-lg">@Html.DisplayNameFor(model => model.ElementAtOrDefault(0).ApplicationUser.RegisteredOn)</div>
        <div class="col-lg">@Html.DisplayNameFor(model => model.ElementAtOrDefault(0).ApplicationUser.LastLogin)</div>
        <div class="col-lg">@Html.DisplayNameFor(model => model.ElementAtOrDefault(0).ApplicationUser.TwoFactorEnabled).SplitCamelAndPascalCase()</div>
        <div class="col-lg">@Html.DisplayNameFor(model => model.ElementAtOrDefault(0).ApplicationUser.AccessFailedCount).SplitCamelAndPascalCase()</div>
        <div class="col-lg">@Html.DisplayNameFor(model => model.ElementAtOrDefault(0).IsLockedOut)</div>
        <div class="col-lg">@Html.DisplayNameFor(model => model.ElementAtOrDefault(0).LockoutEndDate)</div>
        <div class="col-lg"></div>
    </div>

    int count = 0;
    @foreach (var item in Model)
    {
        if (item is not null)
        {
            if (item.ApplicationUser is not null)
            {
                count++;
                string alternatingRowColorClass = string.Empty;
                if (count % 2 == 0)
                {
                    alternatingRowColorClass = "medium-row-color";
                }
                <div class="row text-start text-lg-center @alternatingRowColorClass">
                    <div class="row row-cols-2 d-lg-none">
                        <div class="col text-end fw-bold">@Html.DisplayNameFor(model => model.ElementAtOrDefault(0).ApplicationUser.UserName).SplitCamelAndPascalCase()</div>
                        <div class="col text-start">@Html.DisplayFor(modelItem => item.ApplicationUser.UserName)</div>
                    </div>
                    <div class="col-lg-2 d-none d-lg-inline-block">@Html.DisplayFor(modelItem => item.ApplicationUser.UserName)</div>
                    <div class="row row-cols-2 d-lg-none">
                        <div class="col text-end fw-bold">@Html.DisplayNameFor(model => model.ElementAtOrDefault(0).ApplicationUser.RegisteredOn)</div>
                        <div class="col text-start">@Html.DisplayFor(modelItem => item.ApplicationUser.RegisteredOn)</div>
                    </div>
                    <div class="col-lg d-none d-lg-inline-block">@Html.DisplayFor(modelItem => item.ApplicationUser.RegisteredOn)</div>
                    <div class="row row-cols-2 d-lg-none">
                        <div class="col text-end fw-bold">@Html.DisplayNameFor(model => model.ElementAtOrDefault(0).ApplicationUser.LastLogin)</div>
                        <div class="col text-start">@Html.DisplayFor(modelItem => item.ApplicationUser.LastLogin)</div>
                    </div>
                    <div class="col-lg d-none d-lg-inline-block">@Html.DisplayFor(modelItem => item.ApplicationUser.LastLogin)</div>
                    <div class="row row-cols-2 d-lg-none">
                        <div class="col text-end fw-bold">@Html.DisplayNameFor(model => model.ElementAtOrDefault(0).ApplicationUser.TwoFactorEnabled).SplitCamelAndPascalCase()</div>
                        <div class="col text-start">@Html.DisplayFor(modelItem => item.ApplicationUser.TwoFactorEnabled)</div>
                    </div>
                    <div class="col-lg d-none d-lg-inline-block">@Html.DisplayFor(modelItem => item.ApplicationUser.TwoFactorEnabled)</div>
                    <div class="row row-cols-2 d-lg-none">
                        <div class="col text-end fw-bold">@Html.DisplayNameFor(model => model.ElementAtOrDefault(0).ApplicationUser.AccessFailedCount).SplitCamelAndPascalCase()</div>
                        <div class="col text-start">@Html.DisplayFor(modelItem => item.ApplicationUser.AccessFailedCount)</div>
                    </div>
                    <div class="col-lg d-none d-lg-inline-block">@Html.DisplayFor(modelItem => item.ApplicationUser.AccessFailedCount)</div>
                    <div class="row row-cols-2 d-lg-none">
                        <div class="col text-end fw-bold">@Html.DisplayNameFor(model => model.ElementAtOrDefault(0).IsLockedOut)</div>
                        <div class="col text-start">@Html.DisplayFor(modelItem => item.IsLockedOut)</div>
                    </div>
                    <div class="col-lg d-none d-lg-inline-block">@Html.DisplayFor(modelItem => item.IsLockedOut)</div>
                    <div class="row row-cols-2 d-lg-none">
                        <div class="col text-end fw-bold">@Html.DisplayNameFor(model => model.ElementAtOrDefault(0).LockoutEndDate)</div>
                        <div class="col text-start">@Html.DisplayFor(modelItem => item.LockoutEndDate)</div>
                    </div>
                    <div class="col-lg d-none d-lg-inline-block">@Html.DisplayFor(modelItem => item.LockoutEndDate)</div>
                    <div class="col-lg text-center">
                        <form asp-action="LockUserAccount" method="post">
                            <input type="hidden" name="email" value="@item?.ApplicationUser?.Email" />
                            <button class="btn btn-link" type="submit">Lock</button>
                        </form>
                        <form asp-action="UnlockUserAccount" method="post">
                            <input type="hidden" name="email" value="@item?.ApplicationUser?.Email" />
                            <button class="btn btn-link link-danger" type="submit">Unlock</button>
                        </form>
                        <form asp-action="Delete" method="get">
                            <input type="hidden" name="email" value="@item?.ApplicationUser?.Email" />
                            <button class="btn btn-link" type="submit">Delete</button>
                        </form>
                    </div>
                </div>
                @if (count != Model.Count())
                {
                    <hr />
                }
            }
        }
    }
}
else
{
    <div class="text-center py-2 border border-2 border-secondary rounded text-secondary">
        <p class="pt-2 fs-4">There are no users in your database. Please <a asp-area="Identity" asp-page="/Account/Register">register</a> a user and try again.</p>
    </div>
}
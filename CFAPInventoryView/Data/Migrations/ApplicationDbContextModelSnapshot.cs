// <auto-generated />
using System;
using CFAPInventoryView.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CFAPInventoryView.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CFAPInventoryView.Data.Models.AgeGroup", b =>
                {
                    b.Property<Guid>("AgeGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("AgeGroupId");

                    b.ToTable("AgeGroups");

                    b.HasData(
                        new
                        {
                            AgeGroupId = new Guid("ed2da6d8-a312-489d-b7d0-253d75c6c820"),
                            Description = "0-6 months",
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(6865),
                            LastUpdateId = "travis@mailsac.com",
                            SortOrder = 0
                        },
                        new
                        {
                            AgeGroupId = new Guid("e7581e8f-e2ac-4550-aac7-d4ff7fe778e1"),
                            Description = "6-12 months",
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(6911),
                            LastUpdateId = "travis@mailsac.com",
                            SortOrder = 1
                        },
                        new
                        {
                            AgeGroupId = new Guid("39d9931f-e6a6-449d-aa69-d7aad053e298"),
                            Description = "1-2",
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(6914),
                            LastUpdateId = "travis@mailsac.com",
                            SortOrder = 2
                        },
                        new
                        {
                            AgeGroupId = new Guid("75200021-5b2f-4079-96be-7e38a1ad1adb"),
                            Description = "3-6",
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(6920),
                            LastUpdateId = "travis@mailsac.com",
                            SortOrder = 3
                        },
                        new
                        {
                            AgeGroupId = new Guid("f574f025-f5c3-4611-96d7-ad679e6b1467"),
                            Description = "7-11",
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(6923),
                            LastUpdateId = "travis@mailsac.com",
                            SortOrder = 4
                        },
                        new
                        {
                            AgeGroupId = new Guid("290c1063-f288-46ef-8377-3113586b7c62"),
                            Description = "12-18",
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(6925),
                            LastUpdateId = "travis@mailsac.com",
                            SortOrder = 5
                        });
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.AgeGroupCategory", b =>
                {
                    b.Property<Guid>("AgeGroupCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AgeGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ExcludeCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("OptionalCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("AgeGroupCategoryId");

                    b.HasIndex("AgeGroupId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ExcludeCategoryId");

                    b.HasIndex("OptionalCategoryId");

                    b.ToTable("AgeGroupCategories");
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("RegisteredOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.Basket", b =>
                {
                    b.Property<Guid>("BasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AgeGroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("BasketNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateAssembled")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EthnicityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsShoppingListItem")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("SafeStockLevel")
                        .HasColumnType("int");

                    b.HasKey("BasketId");

                    b.HasIndex("AgeGroupId");

                    b.HasIndex("EthnicityId");

                    b.HasIndex("GenderId");

                    b.ToTable("Baskets");
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.BasketTransaction", b =>
                {
                    b.Property<Guid>("BasketTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BasketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateDistributed")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistributedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DonorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RecipientId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("BasketTransactionId");

                    b.HasIndex("BasketId");

                    b.HasIndex("DonorId");

                    b.HasIndex("RecipientId");

                    b.ToTable("BasketTransactions");
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SafeStockLevel")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("a6760763-1106-426c-aeb9-05142aba7f57"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7376),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Maxi pads or tampons",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("07ebd8cf-f55b-47a9-bf52-072a1f89e16f"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7379),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Body wash or mild soap (unscented)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("d24a4561-f64b-4371-943c-0d4ac6e9be57"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7382),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Hair brush or comb",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("c50504d5-a7ec-4aab-acae-0ed0a39d1578"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7385),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Infant toy (0-6 months)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("6eb9d0bb-c37f-4ba0-a911-0f76be2fb119"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7388),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Package of socks (size youth small)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("1db3a928-231f-48f2-acaf-16747cfdd4ad"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7391),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Deck of cards",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("c37a088f-7112-424b-a187-1b295d2b3cbc"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7393),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Deodorant (non-aerosol preferred)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("d07d2c78-acbb-4d73-806d-1b5c67914554"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7436),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Baby wipes",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("3186795c-ec04-4bf2-b31d-1d0caf80cb24"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7439),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Wide tooth comb",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("7fab58da-a415-40d1-8fd7-1dc1fcdbb729"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7442),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Package of socks (size woman's)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("2fb04be4-3b23-42eb-9534-20d767654667"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7445),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Footed sleeper",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("a8aae37c-e94b-4099-96a7-23bc27b9bdce"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7448),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Night light",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("e0f5c01d-a72a-4e59-abba-24c7309e9d37"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7450),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Pillow case",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("4b223b2e-f4fe-4640-9dd0-2aa7f0263dee"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7453),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Sketch or composition book and pencils",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("e9800b98-0e56-4260-ae26-2e2939230c01"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7456),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Twin blanket",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("bf225467-4b08-4da0-a1e5-2ef0ff6e2f96"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7459),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Diaper cream",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("618dbc0d-a9b0-4be2-9a87-3442e309f746"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7461),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Black hair care products (sulfate-free shampoo, leave-in conditioner, SheaMoisture, Cantu or Dream Kids brands)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("2be28886-7e2e-41c6-886b-3a30ef4cf378"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7464),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Baby lotion",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("c4878700-862c-4748-a0f5-43b1ef4d0655"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7468),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Body lotion for sensitive skin (unscented)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("0c2c3738-e62e-4875-b786-46246636769b"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7470),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Baby blanket or sleep sack",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("620b66ed-e341-4a14-b89c-48fd30632d5d"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7473),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Bottles (for age 6+ months)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("44726539-9806-46a9-99b6-4bdb7dfd7363"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7476),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Large throw",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("1aa58da2-d195-4ffc-9bb7-51920ea8fde4"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7479),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Stuffed animal",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("f27211ee-28cb-42a1-b487-51aa7456ccd3"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7481),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Socks",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("067ac574-c50a-4f2c-b8d7-52877ea217d4"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7484),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Leak-proof water bottle",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("a809dfba-5e21-491e-ab19-5374a141fe88"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7487),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Board book",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("039c1f4e-7a2c-4b4a-9aee-53f4957a7b01"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7489),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Baby brush/comb",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("bf4a75e5-825c-4fed-a4c4-57ea77f21473"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7492),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Package of socks (size youth medium)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("51d50f02-b916-4824-a9f0-59008d6bb8f8"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7495),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Soft throw",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("bb8f1f6e-57d7-4537-8b66-59aa04728add"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7497),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Gentle body wash (unscented)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("fceef0f8-c4d3-4ba3-ba6b-5c3288d794b2"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7500),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Coloring book and washable crayons",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("0dda4f68-adc2-4136-b8cd-5efff84ae6ce"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7503),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Satin bonnet or hair scarf",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("cdfc6b7f-31fb-4bd1-a246-6b8efc241dff"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7506),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Baby lotion for sensitive skin",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("d2d503a2-f55c-4f44-87e1-6c4464a5f16b"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7509),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Infant toy or stuffed animal (6+ months)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("802350c7-e12b-4ac2-a57e-6f394d67cc0c"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7512),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Nerf or stress ball",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("86921bfc-74e7-47f8-a3eb-72928e5e2a8c"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7514),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Shampoo/Conditioner 2-in-1",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("17d0900f-c48d-4059-8caa-7697af8efbe0"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7517),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Twin sheet set",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("027ea222-f944-41b8-8dea-7f922c43c8a3"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7520),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Body lotion",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("dd47744e-3eb3-4cdc-a697-8a707bf8ab3c"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7523),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Package of socks (size men's)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("b43b17b3-b34d-4efb-a07e-8c00e6e7aab0"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7525),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Crib sheet",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("b396c541-ffc3-4231-86fb-8cfed6eae3a4"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7528),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Gift card for diapers (Walmart/Target/Amazon)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("d69feee3-f0ae-456b-b000-9b8fb301dad2"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7531),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Soft throw (crib/toddler sized)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("9441220a-15ea-40e5-b452-9d5406794978"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7533),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Hair brush",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("280a00c3-05b5-415e-876d-9e74d723b175"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7536),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Bar soap",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("b8409915-46fb-408b-9070-a1bc72240000"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7539),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Baby bottle (for ages 12+ months)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("65d5ca12-de4b-4f4b-b57b-a28f14f4fd42"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7541),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Toothbrush and toothpaste",
                            Quantity = 2,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("7665e398-50b4-4e36-a8fc-a6368f192946"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7545),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Body wash or bar soap",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("ec00957f-aa3b-4c34-8554-aa2aaf10335f"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7548),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Package of diapers (size NB, 1, or 2)",
                            Quantity = 3,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("2fcbd4e6-479f-4c55-858e-ac69aeab01b1"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7550),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Toddler toothbrush and toothpaste (fluoride-free)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("4edacb15-8c72-4361-911e-add9c1ef26af"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7553),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Water bottle",
                            Quantity = 1,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("377311f0-f434-46c1-ac21-b05b82413e41"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7556),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Composition book and pens",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("d8ac84a3-afff-485b-8949-b0c2c6272e85"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7559),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Flashlight",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("d11d87e7-126c-4a3c-8125-b6a656d64fcc"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7562),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Pacifier (newborn/up to 6 months)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("d5f318f9-d031-416f-b61d-bff6eb3ddc21"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7564),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Pillow",
                            Quantity = 2,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("d0083f7a-cf78-4223-8328-c5fcac9a8639"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7567),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Body lotion (unscented: Jergens, Vaseline with Cocoa or Shea butter)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("4a7c2d02-c39a-48c9-9e81-c6198f87a2ed"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7569),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Head-to-toe body wash",
                            Quantity = 2,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("18b0b2a3-3163-463d-b8a1-c6314aee6766"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7573),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Detangling comb",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("3c7975d7-283f-4876-bf2c-c6c4a885d6ca"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7576),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Aluminum-free deodorant",
                            Quantity = 3,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("dfa15e75-56e9-4fd9-8abe-c7ce9c28a6d8"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7579),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Clear/invisible deodorant (non-aerosol preferred)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("483c2687-b6cc-4132-a386-c8351a3ce03c"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7582),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Towel and wash cloth",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("305f2292-4230-403c-8e78-ccab2b7faf66"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7585),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Pacifier (for age 6+ months)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("b0a6921d-55fd-40ff-b7e4-cef32e093c21"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7587),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Pillow (travel or child sized)",
                            Quantity = 2,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("dce8a93b-66c4-4d10-a5c5-d72ae5add07f"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7590),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Package of socks (size youth large)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("65ea10fe-b443-4233-a48a-d8bd7896d244"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7593),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Swaddle wrap",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("e90c0353-dd59-4a87-9897-da2ba2070999"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7595),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Conditioner",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("70feab08-d33a-409b-af35-dee1c37fe46b"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7598),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Shampoo",
                            Quantity = 1,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("726ccf14-58b8-4878-b3ea-e58504bb71b3"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7601),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Deodorant",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("badafee8-1c62-46be-98c9-e83c89f06322"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7603),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Package of socks",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("61da1441-6b0e-4d1a-88a2-ec632d01906d"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7606),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Gentle baby wash and shampoo (sulfate-free)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("c915d086-e1cb-4a9c-a8f4-ef7d6331eb1d"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7609),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Plastic hair pick",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("7ac8c99f-aaca-4883-ab1f-fb94fbaa9fca"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7611),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Anti-colic bottles",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            CategoryId = new Guid("b2488733-9e8d-47a5-b1a4-fe6ffe3da0d5"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7614),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Kids 3-in-1 soap (shampoo/conditioner/body wash)",
                            Quantity = 2,
                            SafeStockLevel = 3
                        });
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.CategoryBasket", b =>
                {
                    b.Property<Guid>("CategoryBasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BasketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ExcludeCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("OptionalCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CategoryBasketId");

                    b.HasIndex("BasketId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ExcludeCategoryId");

                    b.HasIndex("OptionalCategoryId");

                    b.ToTable("CategoryBaskets");
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.Donor", b =>
                {
                    b.Property<Guid>("DonorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("DonorId");

                    b.ToTable("Donors");
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.Ethnicity", b =>
                {
                    b.Property<Guid>("EthnicityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EthnicityId");

                    b.ToTable("Ethnicities");

                    b.HasData(
                        new
                        {
                            EthnicityId = new Guid("0040e5c2-0d7f-4db8-a7e8-28c5efa6cf4f"),
                            Description = "Black/Mixed Race",
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7103),
                            LastUpdateId = "travis@mailsac.com"
                        },
                        new
                        {
                            EthnicityId = new Guid("b5c934b6-c7e0-493f-8726-c3fd5ff2141f"),
                            Description = "White/Hispanic",
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7107),
                            LastUpdateId = "travis@mailsac.com"
                        });
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.ExcludeCategory", b =>
                {
                    b.Property<Guid>("ExcludeCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ExcludeCategoryId");

                    b.ToTable("ExcludeCategories");

                    b.HasData(
                        new
                        {
                            ExcludeCategoryId = new Guid("bb0c0779-5261-4d14-8a96-12ff3e0d8dff"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7207),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Items requiring batteries",
                            Quantity = 0
                        },
                        new
                        {
                            ExcludeCategoryId = new Guid("9fe23dd1-3946-4456-8c5d-5808458eafd3"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7211),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Items with spiral binding",
                            Quantity = 0
                        },
                        new
                        {
                            ExcludeCategoryId = new Guid("5cef1269-2589-4a6f-a150-5ed172d16a1a"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7214),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Baby food or formula",
                            Quantity = 0
                        },
                        new
                        {
                            ExcludeCategoryId = new Guid("ebfef241-8abb-4b02-89a1-9a5d19893c11"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7217),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Used items",
                            Quantity = 0
                        },
                        new
                        {
                            ExcludeCategoryId = new Guid("f77cbfaa-11cd-44e7-abb7-e3e0f030e212"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7219),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Sharp objects such as razors or manicure sets",
                            Quantity = 0
                        },
                        new
                        {
                            ExcludeCategoryId = new Guid("695b89cf-9c4d-4ad4-af45-e9d0422d41ef"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7222),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Food or beverages",
                            Quantity = 0
                        });
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.Gender", b =>
                {
                    b.Property<Guid>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GenderId");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            GenderId = new Guid("78cc56f2-717b-45cb-b025-09c0cca68f27"),
                            Description = "Girl",
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7174),
                            LastUpdateId = "travis@mailsac.com"
                        },
                        new
                        {
                            GenderId = new Guid("629f93b9-15d1-4aab-a0a6-9ab22e6ac159"),
                            Description = "Boy",
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7179),
                            LastUpdateId = "travis@mailsac.com"
                        },
                        new
                        {
                            GenderId = new Guid("aedb28bc-17de-436e-8348-217802299584"),
                            Description = "Neutral",
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7182),
                            LastUpdateId = "travis@mailsac.com"
                        });
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.OptionalCategory", b =>
                {
                    b.Property<Guid>("OptionalCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SafeStockLevel")
                        .HasColumnType("int");

                    b.HasKey("OptionalCategoryId");

                    b.ToTable("OptionalCategories");

                    b.HasData(
                        new
                        {
                            OptionalCategoryId = new Guid("a2197138-9321-473e-891f-1507671d43d7"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7244),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Satin bonnet or hair scarf",
                            Quantity = 3,
                            SafeStockLevel = 4
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("4a0e060b-e159-49af-9ecd-1790f8d7a0b3"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7248),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Adhesive bandages/band-aids",
                            Quantity = 5,
                            SafeStockLevel = 10
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("1d6ad3d8-d44c-4982-a912-24454286fead"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7251),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Small toy",
                            Quantity = 5,
                            SafeStockLevel = 5
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("741217d0-a963-489a-863d-2570bb91c4e5"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7254),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Hair gel",
                            Quantity = 3,
                            SafeStockLevel = 4
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("d9caf847-0312-4808-979b-25b5bffc4fb8"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7257),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Oil/cream moisturizer for curly hair",
                            Quantity = 4,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("989a01f0-8f0e-468c-ab51-2c6501348672"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7259),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Small backpack",
                            Quantity = 3,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("d0193bc7-1a7f-48a2-bee5-2d5402a2c66f"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7263),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Sleep sack",
                            Quantity = 4,
                            SafeStockLevel = 2
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("7c65fb61-080a-4ff7-9d27-37904280e926"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7266),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Wave brush or Denman brush",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("a698b945-513b-4379-a13c-398f31e47bb6"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7269),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Backpack or drawstring bag",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("18db181a-39c7-4ff6-aa5f-504c9fd42495"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7272),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Baby towel and washcloths",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("84f608e3-e046-4cfc-9525-56677374cce9"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7274),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Children's book",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("6c31ed18-3271-4434-af24-5697a341ed6e"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7277),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Nerf ball or fidget toy",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("337e6455-6bcb-4241-a3b8-58c7a6f2200c"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7280),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Themed adhesive band-aids",
                            Quantity = 5,
                            SafeStockLevel = 10
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("aa154101-bce0-4973-b9aa-7291f06b571c"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7283),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Infant nail clippers",
                            Quantity = 5,
                            SafeStockLevel = 10
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("02561934-85a8-4ef0-a890-82092b240fb4"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7286),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Burp cloths",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("678425c7-3b3e-4f23-b073-8268f4ce273a"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7288),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Aquaphor healing ointment",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("010a1cc4-259b-4198-a841-92a5b784787d"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7291),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Gift card (Walmart/Target)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("e58de252-2495-4a19-94b4-9641320fa900"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7295),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Soft bristle brush",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("743c8970-b53d-496c-9ee9-96c0be328f55"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7299),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Kids satin night cap/bonnet",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("86eecf1b-d8bb-4526-a9c1-9b3d511ec50f"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7302),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Coloring or sketch book, and colored pencils",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("b9a71948-1ac2-4e86-bda7-9dde074be330"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7305),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Hair accessories",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("b88a0b8b-0460-4fa6-b5cf-9f94261fd823"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7307),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Toiletry bag",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("373ffcaf-8c96-4dc5-b7fd-a5247e1a62cd"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7310),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Crib Sheet",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("bf55fcfc-ce99-436c-8127-aa6898af039f"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7313),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Diaper cream",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("811f6a9a-0845-4116-a3f6-b1c0cd3a5912"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7316),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Toy (e.g. chunky puzzle, baby doll, toy car)",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("de8bbea2-fffe-4073-9acc-b91c45a05a2c"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7318),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Chapstick",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("15423c38-cbd8-4b49-bbb8-ba74804189e2"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7321),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Baby brush/comb",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("6c1f919d-8b90-43f0-9bf4-c4d69ed6537d"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7324),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Body lotion",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("355cfdc5-4ef5-4ef1-b881-c5cede5d6270"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7327),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Hair lotion, oil, or gel",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("85bcb30f-f902-485d-a82f-c9544d435df5"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7329),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Face wipes or face wash",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("d03154ff-da79-4b02-b231-cd0d8494c2e5"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7332),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Thermometer",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("34f51fd8-5e64-46df-beb9-d3caad869f22"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7335),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Activity book and crayons/pencils",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("a31f289e-a7b7-4b51-ae96-d742a3dbf460"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7338),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Wave cap or satin hair tie",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("7e95c73e-2251-4680-b71a-ed86f3951efb"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7340),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Shower cap",
                            Quantity = 5,
                            SafeStockLevel = 3
                        },
                        new
                        {
                            OptionalCategoryId = new Guid("2d024344-dd8e-49bb-a069-ef59a2625d34"),
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7343),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Bulb aspirator",
                            Quantity = 5,
                            SafeStockLevel = 3
                        });
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.Recipient", b =>
                {
                    b.Property<Guid>("RecipientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdoptiveParent")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFosterParent")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("RecipientId");

                    b.ToTable("Recipients");
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.StorageLocation", b =>
                {
                    b.Property<Guid>("StorageLocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Column")
                        .HasColumnType("int");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Row")
                        .HasColumnType("int");

                    b.Property<string>("Shelf")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StorageLocationId");

                    b.ToTable("StorageLocations");
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.Supply", b =>
                {
                    b.Property<Guid>("SupplyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Barcode")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ExcludeCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Expires")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid?>("OptionalCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Price")
                        .HasPrecision(13, 4)
                        .HasColumnType("decimal(13,4)");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("SupplyId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ExcludeCategoryId");

                    b.HasIndex("OptionalCategoryId");

                    b.ToTable("Supplies");

                    b.HasData(
                        new
                        {
                            SupplyId = new Guid("a4913d87-9305-4a4f-981f-09b0a226f753"),
                            CategoryId = new Guid("ec00957f-aa3b-4c34-8554-aa2aaf10335f"),
                            Description = "Pampers baby-dry leakproof day & night diapers, size 1 (8-14 lb), 44 count, unisex.",
                            Expires = false,
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7704),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Pampers Baby Dry Diapers Size 1 (8-14 lb), 44 Count",
                            Price = 9.97m,
                            PurchaseDate = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7697),
                            Quantity = 1
                        },
                        new
                        {
                            SupplyId = new Guid("3e2d5eee-ebfc-4a86-9c9c-18049eccaeed"),
                            CategoryId = new Guid("d11d87e7-126c-4a3c-8125-b6a656d64fcc"),
                            Description = "NUK newborn orthodontic pacifiers, girl, 0-2 months, 2-pack.",
                            Expires = false,
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7711),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Orthodontic Pacifiers (2 pk, girl, 0-2 month)",
                            Price = 6.77m,
                            PurchaseDate = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7708),
                            Quantity = 1
                        },
                        new
                        {
                            SupplyId = new Guid("dd6d4bec-20f1-4149-8f14-2141bad77e9b"),
                            CategoryId = new Guid("a809dfba-5e21-491e-ab19-5374a141fe88"),
                            Description = "The Very Hungry Caterpillar, Board Book, English, 0-3 yrs, Infant-Toddler",
                            Expires = false,
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7718),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "The Very Hungry Caterpillar (board book)",
                            Price = 8.78m,
                            PurchaseDate = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7715),
                            Quantity = 1
                        },
                        new
                        {
                            SupplyId = new Guid("d5b42185-f6f5-4d33-9c7d-392eadb5b1e6"),
                            CategoryId = new Guid("65ea10fe-b443-4233-a48a-d8bd7896d244"),
                            Description = "Gilquen baby organic cotton swaddle blankets for 0-3 months infant boys girls, adjustable newborn swaddles, 3-pack wrap set, twinkle & rainbow.",
                            Expires = false,
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7725),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Baby Cotton Swaddle Blankets (0-3 months, 3-pk)",
                            Price = 18.76m,
                            PurchaseDate = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7722),
                            Quantity = 1
                        },
                        new
                        {
                            SupplyId = new Guid("9e0ef560-c184-46bb-9f57-45e295bf57b2"),
                            CategoryId = new Guid("d07d2c78-acbb-4d73-806d-1b5c67914554"),
                            Description = "Huggies natural care refreshing baby wipes, scented, (3 pk, 168 ct)",
                            Expires = false,
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7732),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Huggies Baby Wipes (scented, 3 pk, 168 ct)",
                            Price = 6.77m,
                            PurchaseDate = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7729),
                            Quantity = 1
                        },
                        new
                        {
                            SupplyId = new Guid("06f703f4-dfbf-4fd0-b0a6-5c75bc8fe17a"),
                            CategoryId = new Guid("2fb04be4-3b23-42eb-9534-20d767654667"),
                            Description = "Koala baby girls' newborn blanket sleeper, 2 pack, take me home sleep n play pajamas (Newborn-6M)",
                            Expires = false,
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7739),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Koala Baby Footed Sleeper (girl, 2 pk, NB-6M)",
                            Price = 10.58m,
                            PurchaseDate = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7736),
                            Quantity = 1
                        },
                        new
                        {
                            SupplyId = new Guid("16f0b155-8127-4eab-99e1-65473bc89952"),
                            CategoryId = new Guid("61da1441-6b0e-4d1a-88a2-ec632d01906d"),
                            Description = "Johnson's head-to-toe gentle baby wash & shampoo, tear-free, sulfate-free & hypoallergenic wash for baby's sensitive skin & hair, 27.1 fl. oz.",
                            Expires = false,
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7746),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Gentle Baby Wash & Shampoo (tear-free, sulfate-free, hypoallergenic, 27.1 fl oz)",
                            Price = 11.95m,
                            PurchaseDate = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7742),
                            Quantity = 1
                        },
                        new
                        {
                            SupplyId = new Guid("1ec27cd4-58a3-49d3-8395-8d83536a4305"),
                            CategoryId = new Guid("bf225467-4b08-4da0-a1e5-2ef0ff6e2f96"),
                            Description = "Desitin maximum strength baby diaper rash cream with zinc oxide, 4 oz",
                            Expires = false,
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7752),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Desitin Diaper Cream (4 oz)",
                            Price = 7.78m,
                            PurchaseDate = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7749),
                            Quantity = 1
                        },
                        new
                        {
                            SupplyId = new Guid("5aa553c8-f564-4755-9d2a-8e5a66f884d1"),
                            CategoryId = new Guid("cdfc6b7f-31fb-4bd1-a246-6b8efc241dff"),
                            Description = "Aveeno baby daily moisture body lotion for sensitive skin with natural colloidal oatmeal, suitable  for newborns, 18 FL oz",
                            Expires = false,
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7759),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Aveeno Baby Daily Moisture Body Lotion (sensitive skin, 18 FL oz)",
                            Price = 11.38m,
                            PurchaseDate = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7756),
                            Quantity = 1
                        },
                        new
                        {
                            SupplyId = new Guid("331d83d3-04e4-41ca-9527-8ebcc1316090"),
                            CategoryId = new Guid("d07d2c78-acbb-4d73-806d-1b5c67914554"),
                            Description = "Pampers sensitive baby wipes, 8 flip-top packs, 672 wipes",
                            Expires = false,
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7765),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Pampers Baby Wipes (sensitive, 8 pk, 672 wipes)",
                            Price = 23.47m,
                            PurchaseDate = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7763),
                            Quantity = 1
                        },
                        new
                        {
                            SupplyId = new Guid("6d59f00f-d7d8-48e3-ab36-9d96de8b09d0"),
                            CategoryId = new Guid("7ac8c99f-aaca-4883-ab1f-fb94fbaa9fca"),
                            Description = "NUK smooth flow pro anti-colic baby bottle, 5 oz, blue, 3-pack",
                            Expires = false,
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7773),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Anti-colic Baby Bottles (blue, 3 pk, 5 oz)",
                            Price = 14.97m,
                            PurchaseDate = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7769),
                            Quantity = 1
                        },
                        new
                        {
                            SupplyId = new Guid("7604aea7-96b0-4096-8bbb-bbef00fdc221"),
                            CategoryId = new Guid("ec00957f-aa3b-4c34-8554-aa2aaf10335f"),
                            Description = "Pampers swaddlers diapers, newborn (< 10 lb), 31 count, unisex",
                            Expires = false,
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7779),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Pampers Diapers (NB, 31 count)",
                            Price = 14.5m,
                            PurchaseDate = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7777),
                            Quantity = 1
                        },
                        new
                        {
                            SupplyId = new Guid("a864cd79-d226-441d-9f23-db77c2b9bd85"),
                            CategoryId = new Guid("c50504d5-a7ec-4aab-acae-0ed0a39d1578"),
                            Description = "Amerteer 4 pcs foot finder socks & wrist rattles - newborn toys for baby boy or girl - brain development infant toys - hand and foot rattles suitable for 0-3, 3-6, 6-12 month babies.",
                            Expires = false,
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7787),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Foot Finder Socks & Wrist Rattles (NB, toys, 4 pcs)",
                            Price = 7.28m,
                            PurchaseDate = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7783),
                            Quantity = 1
                        },
                        new
                        {
                            SupplyId = new Guid("07979a90-bab9-47cf-befd-f0b16999ee00"),
                            CategoryId = new Guid("f27211ee-28cb-42a1-b487-51aa7456ccd3"),
                            Description = "Gerber baby boy and girl unisex terry bootie wiggle-proof socks, 4-pack, newborn, 0-6 months.",
                            Expires = false,
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7795),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Baby socks (unisex, 4 pk, newborn, 0-6 months)",
                            Price = 4.00m,
                            PurchaseDate = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7792),
                            Quantity = 1
                        },
                        new
                        {
                            SupplyId = new Guid("3a13f50b-b57f-44ae-ba14-f65e4e27cd54"),
                            CategoryId = new Guid("ec00957f-aa3b-4c34-8554-aa2aaf10335f"),
                            Description = "Pampers baby-dry leakproof day & night diapers, size 2 (12-18 lb), 37 count, unisex.",
                            Expires = false,
                            LastUpdateDateTime = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7802),
                            LastUpdateId = "travis@mailsac.com",
                            Name = "Pampers Baby Dry Diapers Size 2 (12-18 lb), 37 Count",
                            Price = 9.97m,
                            PurchaseDate = new DateTime(2023, 12, 1, 19, 47, 5, 879, DateTimeKind.Local).AddTicks(7799),
                            Quantity = 1
                        });
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.SupplyBasket", b =>
                {
                    b.Property<Guid>("SupplyBasketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BasketId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SupplyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SupplyBasketId");

                    b.HasIndex("BasketId");

                    b.HasIndex("SupplyId");

                    b.ToTable("SupplyBaskets");
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.SupplyTransaction", b =>
                {
                    b.Property<Guid>("SupplyTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateDistributed")
                        .HasColumnType("datetime2");

                    b.Property<string>("DistributedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("DonorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdateDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastUpdateId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RecipientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SupplyId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("SupplyTransactionId");

                    b.HasIndex("DonorId");

                    b.HasIndex("RecipientId");

                    b.HasIndex("SupplyId");

                    b.ToTable("SupplyTransactions");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.AgeGroupCategory", b =>
                {
                    b.HasOne("CFAPInventoryView.Data.Models.AgeGroup", "AgeGroup")
                        .WithMany()
                        .HasForeignKey("AgeGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CFAPInventoryView.Data.Models.Category", null)
                        .WithMany("AgeGroups")
                        .HasForeignKey("CategoryId");

                    b.HasOne("CFAPInventoryView.Data.Models.ExcludeCategory", null)
                        .WithMany("AgeGroups")
                        .HasForeignKey("ExcludeCategoryId");

                    b.HasOne("CFAPInventoryView.Data.Models.OptionalCategory", null)
                        .WithMany("AgeGroups")
                        .HasForeignKey("OptionalCategoryId");

                    b.Navigation("AgeGroup");
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.Basket", b =>
                {
                    b.HasOne("CFAPInventoryView.Data.Models.AgeGroup", "AgeGroup")
                        .WithMany()
                        .HasForeignKey("AgeGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CFAPInventoryView.Data.Models.Ethnicity", "Ethnicity")
                        .WithMany()
                        .HasForeignKey("EthnicityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CFAPInventoryView.Data.Models.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AgeGroup");

                    b.Navigation("Ethnicity");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.BasketTransaction", b =>
                {
                    b.HasOne("CFAPInventoryView.Data.Models.Basket", "Basket")
                        .WithMany()
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CFAPInventoryView.Data.Models.Donor", null)
                        .WithMany("BasketTransactions")
                        .HasForeignKey("DonorId");

                    b.HasOne("CFAPInventoryView.Data.Models.Recipient", "Recipient")
                        .WithMany("BasketTransactions")
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Basket");

                    b.Navigation("Recipient");
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.CategoryBasket", b =>
                {
                    b.HasOne("CFAPInventoryView.Data.Models.Basket", null)
                        .WithMany("CategoryBaskets")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CFAPInventoryView.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("CFAPInventoryView.Data.Models.ExcludeCategory", "ExcludeCategory")
                        .WithMany()
                        .HasForeignKey("ExcludeCategoryId");

                    b.HasOne("CFAPInventoryView.Data.Models.OptionalCategory", "OptionalCategory")
                        .WithMany()
                        .HasForeignKey("OptionalCategoryId");

                    b.Navigation("Category");

                    b.Navigation("ExcludeCategory");

                    b.Navigation("OptionalCategory");
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.Supply", b =>
                {
                    b.HasOne("CFAPInventoryView.Data.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");

                    b.HasOne("CFAPInventoryView.Data.Models.ExcludeCategory", "ExcludeCategory")
                        .WithMany()
                        .HasForeignKey("ExcludeCategoryId");

                    b.HasOne("CFAPInventoryView.Data.Models.OptionalCategory", "OptionalCategory")
                        .WithMany()
                        .HasForeignKey("OptionalCategoryId");

                    b.Navigation("Category");

                    b.Navigation("ExcludeCategory");

                    b.Navigation("OptionalCategory");
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.SupplyBasket", b =>
                {
                    b.HasOne("CFAPInventoryView.Data.Models.Basket", null)
                        .WithMany("SupplyBaskets")
                        .HasForeignKey("BasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CFAPInventoryView.Data.Models.Supply", "Supply")
                        .WithMany()
                        .HasForeignKey("SupplyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supply");
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.SupplyTransaction", b =>
                {
                    b.HasOne("CFAPInventoryView.Data.Models.Donor", null)
                        .WithMany("SupplyTransactions")
                        .HasForeignKey("DonorId");

                    b.HasOne("CFAPInventoryView.Data.Models.Recipient", "Recipient")
                        .WithMany("SupplyTransactions")
                        .HasForeignKey("RecipientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CFAPInventoryView.Data.Models.Supply", "Supply")
                        .WithMany()
                        .HasForeignKey("SupplyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipient");

                    b.Navigation("Supply");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("CFAPInventoryView.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("CFAPInventoryView.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CFAPInventoryView.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("CFAPInventoryView.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.Basket", b =>
                {
                    b.Navigation("CategoryBaskets");

                    b.Navigation("SupplyBaskets");
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.Category", b =>
                {
                    b.Navigation("AgeGroups");
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.Donor", b =>
                {
                    b.Navigation("BasketTransactions");

                    b.Navigation("SupplyTransactions");
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.ExcludeCategory", b =>
                {
                    b.Navigation("AgeGroups");
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.OptionalCategory", b =>
                {
                    b.Navigation("AgeGroups");
                });

            modelBuilder.Entity("CFAPInventoryView.Data.Models.Recipient", b =>
                {
                    b.Navigation("BasketTransactions");

                    b.Navigation("SupplyTransactions");
                });
#pragma warning restore 612, 618
        }
    }
}
